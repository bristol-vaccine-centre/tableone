[{"path":"https://bristol-vaccine-centre.github.io/tableone/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Bristol vaccine centre Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/configuration.html","id":"column-labelling","dir":"Articles","previous_headings":"","what":"Column labelling","title":"tableone: Configuration","text":"custom labeller function defined table Control whether display footer.","code":"# set a table relabelling function rename_cols = function(col) {   case_when(     col == \"hos.cat\" ~ \"Location\",     col == \"steroids\" ~ \"Steroid treatment\",     TRUE ~ stringr::str_to_sentence(col)   ) }  # set it using an option # we are not going to reset this as we will use in all the subsequent examples:  options(\"tableone.labeller\"=rename_cols)  # we can choose to hide the footer old = options(\"tableone.hide_footer\"=TRUE)  gcd %>% compare_population(formula) options(old)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/configuration.html","id":"content-format","dir":"Articles","previous_headings":"","what":"Content format","title":"tableone: Configuration","text":"Change decimal point Change font font size Change labelling p-value column Change format p-value Show method p-value daggers","code":"old = options(   # set a mid point as decimal point   \"tableone.dp\"=\"\\u00B7\",   \"tableone.font\"=\"Arial Narrow\",   \"tableone.font_size\"=12,   \"tableone.pvalue_column_name\"=\"p-value\",   \"tableone.pvalue_formatter\" =            scales::label_pvalue(accuracy = 0.01,decimal.mark = \"\\u00B7\"),   \"tableone.show_pvalue_method\"=TRUE )   gcd %>% compare_population(formula) # reset options(old)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/configuration.html","id":"summary-types","dir":"Articles","previous_headings":"","what":"Summary types","title":"tableone: Configuration","text":"default statistics may seem wrong data, particularly decision around whether present mean median, depends detection normality data. presentation can overridden supplying named list override_type, names original column names override. won’t change method detection significance depends detection normality. test type significance levels also configurable.","code":"# override_type - names list of column names and summary type out of options  # with this looser definition of normality (i.e. less likely to reject the null # that the data is normally distributed), height and weight are found to be # and hence the t-test is used. old = options(   \"tableone.normality_test\"=\"lillie\",   \"tableone.normality_significance\"=0.00001 )  gcd %>% compare_population(     formula,     # age is still not normally distributed but we can override it to be      # presented as a mean and SD.     override_type = list(age=\"mean_sd\")   ) options(old)  # the following option also controls which parametric test is chosen (between) # wilcoxon and ks tests # options(\"tableone.tolerance_to_ties\"=0.25)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/configuration.html","id":"customising-the-number-of-decimal-places","dir":"Articles","previous_headings":"","what":"Customising the number of decimal places","title":"tableone: Configuration","text":"Need change column column basis (eg. reals using named list) systematic bases (e.g. percent). Specification can either fixed (e.g. “2f”) significant figures (e.g. “3g”). N.b. setting independent p-value formatter.","code":"gcd %>% compare_population(     formula,     override_real_dp = list(age=\"0f\",height=\"0f\",weight=\"2f\"),     override_percent_dp = 0   )"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/configuration.html","id":"summary-format-customisation","dir":"Articles","previous_headings":"","what":"Summary format customisation","title":"tableone: Configuration","text":"Standard layouts defined, “relaxed”, “compact”, “simple”, “single”, “missing”, can used layout parameter give particular format columns content table.","code":"gcd %>% compare_population(     formula,     layout = \"relaxed\"   )"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/configuration.html","id":"custom-layouts","dir":"Articles","previous_headings":"","what":"Custom layouts","title":"tableone: Configuration","text":"“relaxed” standard layout defined using list. shown : can produce customised list based supply formatting function layout parameter. named list defines column name column contents. column contents can refer following variables: subtype_count can use {level}, {prob.0.5}, {prob.0.025}, {prob.0.975}, {n}, {N} - n subgroup count, N data count. median_iqr can use {q.0.5}, {q.0.25}, …, {unit}, {n}, {N} - n excludes missing, N . mean_sd can use {mean}, {sd}, {unit}, {n}, {N} - n excludes missing, N . skipped can use {unit}, {n}, {N} - n excludes missing, N . useful formatting functions spec can also use beyond usual text processing functions: .sprintf_na - sprintfs set numbers replacing output getOption(\"tableone.na\",\"\\u2014\") values missing, values missing relacing individial missing value withgetOption(\"tableone.missing\",\"<?>\") .sprintf_no_na - sprintfs set numbers replacing output getOption(\"tableone.na\",\"\\u2014\") values missing .maybe - returns string present “” NA","code":"list(     subtype_count = list(         characteristic = \"{level} % [95% CI]\",         value = \"{.sprintf_na('%1.1f%% [%1.1f%%—%1.1f%%]',prob.0.5*100,prob.0.025*100,prob.0.975*100)}\",         count = \"{.sprintf_na('%d/%d',n,N)}\"     ),     median_iqr = list(         characteristic = \"Median [IQR]\",         value = \"{.sprintf_na('%1.3g %s [%1.3g—%1.3g]',q.0.5,unit,q.0.25,q.0.75)}\",         count = \"{.sprintf_na('%d',n)}\"     ),     mean_sd = list(         characteristic = \"Mean ± SD\", value = \"{.sprintf_na('%1.3g %s ± %1.3g',mean,unit,sd)}\",         count = \"{.sprintf_na('%d',n)}\"     ),     skipped = list(         characteristic = \"—\", value = \"—\",         count = \"{.sprintf_na('%d',n)}\"     ) ) custom = list(     subtype_count = list(         characteristic = \"{level}\",         value = \"{.sprintf_na('%1.1f%% (%d/%d)',prob.0.5*100,n,N)}\"     ),     median_iqr = list(         characteristic = \"Median (N)\",         value = \"{.sprintf_na('%1.3g (%d)',q.0.5,n)}\"     ),     mean_sd = list(         characteristic = \"Mean (N)\",          value = \"{.sprintf_na('%1.3g (%d)',mean,n)}\"     ),     skipped = list(         characteristic = \"(N)\",          value = \"{.sprintf_na('— (%d)',n)}\"     ) )  # printing control the following options control missing values # produced by the .sprintf_na function: # getOption(\"tableone.missing\",\"<?>\") # getOption(\"tableone.na\",\"\\u2014\")   gcd %>% compare_population(     formula,     layout = custom   )"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/configuration.html","id":"footer-customisation","dir":"Articles","previous_headings":"","what":"Footer customisation","title":"tableone: Configuration","text":"Additional information can added default footer. Handy acronyms","code":"gcd %>% compare_population(    formula,    footer_text = c(       \"IQR: Interquartile range; CI: Confidence interval\",       \"Additional information could be supplied\")    ) # or we can choose to hide the footer altogether # old = options(\"tableone.hide_footer\"=TRUE) # or by setting `footer_text` to false"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/tableone.html","id":"formula-versus-tidyselect-interface","dir":"Articles","previous_headings":"","what":"Formula versus tidyselect interface","title":"tableone: Getting started","text":"tableone implemented allow subset columns large dataset pulled table without fuss. also designed workflow mind involves building statistical models data later. assume data follows general pattern one observation per row, individual columns specific data points observations may one : outcome: something assessing statistical model, maybe continuous outcome, time measure, logical measure. intervention: thing varied different observations covariates: factors may influence outcome want control . end want construct model takes following high level structure: outcome ~ intervention + covariate_1 + covariate_2 + ... + covariate_n","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/tableone.html","id":"simple-population-description-example","dir":"Articles","previous_headings":"Formula versus tidyselect interface","what":"Simple population description example","title":"tableone: Getting started","text":"build model need firstly compare distribution covariates population secondly compare intervention non-intervention groups, usually done without reference outcome. demonstrate using survival::cgd data set. specified using formula interface. example taken example formula might wish use survival model reuse give us targetted descriptive table. also possible define relabelling function : generally use formula interface exploration larger datasets covariates tidyselect interface may useful.","code":"gcd = survival::cgd %>%    # filter to include only the first visit   filter(enum==1) %>%    # make the steroids and propylac columns into a logical value   # see later for a better way of doing this.   mutate(     steroids = as.logical(steroids),     propylac = as.logical(propylac)   )     # A basic unstratified population description table is as follows: gcd %>% describe_population(everything()) # define a formula - this might be reused in model building later formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  # set a table relabelling function rename_cols = function(col) {   case_when(     col == \"hos.cat\" ~ \"Location\",     col == \"steroids\" ~ \"Steroid treatment\",     TRUE ~ stringr::str_to_sentence(col)   ) } options(\"tableone.labeller\"=rename_cols)  # create a simple description gcd %>% describe_population(formula)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/tableone.html","id":"comparing-the-population-by-intervention","dir":"Articles","previous_headings":"Formula versus tidyselect interface","what":"Comparing the population by intervention","title":"tableone: Getting started","text":"example useful table compares treatment groups. can use formula syntax , case first predictor assumed intervention data set compared intervention (case treat column). can conclude population well distributed placebo treatment groups major bias randomisation process: Alternatively using tidyselect interface alternate syntax given us table. Note must group data intervention, tidyselect work intended:","code":"# same as above formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  # labelling function is still active gcd %>% compare_population(formula) gcd %>% group_by(treat) %>%    compare_population(sex,age,height,weight,inherit,steroids,hos.cat)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/tableone.html","id":"analysis-of-missing-data","dir":"Articles","previous_headings":"","what":"Analysis of missing data","title":"tableone: Getting started","text":"need make sure data equivalent intervention groups also missing data unevenly distributed excessive. Reporting frequency missing data stratified intervention also easy, demonstrate make data set 10% placebo arm haveing missing values, 25% treament arm: Comparing new data set see significant differences data (steroids variable). quite small dataset sufficiently powered reliably detect difference missingness level (15% difference).","code":"# generate a dataset with values missing not at random compared to the intervention: cgd_treat = cgd %>% mutate(treat = as.character(treat)) %>% filter(treat != \"placebo\") cgd_placebo = cgd %>% mutate(treat = as.character(treat)) %>% filter(treat == \"placebo\")  set.seed(100) mnar_cgd = bind_rows(   cgd_placebo %>% .make_missing(p_missing = 0.1),   cgd_treat %>% .make_missing(p_missing = 0.25) ) # compare the MNAR dataset against the intervention: formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  mnar_cgd %>% compare_missing(formula)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/tableone.html","id":"conversion-of-discrete-data","dir":"Articles","previous_headings":"","what":"Conversion of discrete data","title":"tableone: Getting started","text":"Using new data set missing data may necessary discretise data, convert logical values properly named factors.","code":"decade = function(x) sprintf(\"%d-%d\",x-(x%%10),x-(x%%10)+9)  discrete_cgd = mnar_cgd %>%    # pick out the first episode   filter(enum == 1) %>%   # convert data   make_factors(     steroids,propylac,age,weight,height,     .logical = c(\"recieved\",\"not recieved\"),     .numeric = list(       age=\"{decade(value)}\",       weight=\"{ifelse(value<20,'<20','20+')}\",       height=\"{ifelse(value<mean(value, na.rm=TRUE),'below average','above average')}\"     )   )  formula = Surv(tstart, tstop, status) ~ treat +    sex + age + height + weight + inherit + steroids + hos.cat  options(\"tableone.show_pvalue_method\"=TRUE)  # This comparison implicitly ignores missing values. discrete_cgd %>% compare_population(formula)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/tableone.html","id":"making-missing-factors-explicit","dir":"Articles","previous_headings":"","what":"Making missing factors explicit:","title":"tableone: Getting started","text":"comparison missing values included, cautious findings. factor values missing (case) can include new group get robust comparison includes distribution missingness. contrast previous comparison","code":"discrete_cgd %>% explicit_na() %>% compare_population(formula)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/articles/tableone.html","id":"non-biomedical-data","dir":"Articles","previous_headings":"","what":"Non biomedical data","title":"tableone: Getting started","text":"Beyond bio-medical example tableone can make general comparison data structure like: ~ group + observation_1 + observation_2 + ... + observation_n use iris diamonds datasets demonstrate general use case tableone. missing_diamonds data set included package 10% values removed. demonstrates need reporting denominator.","code":"# revert the labeller setting to the default # and additionally hide the footer. options(\"tableone.labeller\"=NULL) options(\"tableone.show_pvalue_method\"=FALSE) options(\"tableone.hide_footer\"=TRUE)  # the heuristics detect that Petals in the iris data set are not normally # distributed and hence report median and IQR: iris %>% group_by(Species) %>% compare_population(tidyselect::everything()) #> Warning in lapply(X = X, FUN = FUN, ...): restarting interrupted promise #> evaluation # The counts sometimes seem redundant if there is no missing information: # however in a data set with missing values the denominators are important: missing_diamonds %>% describe_population(tidyselect::everything())"},{"path":"https://bristol-vaccine-centre.github.io/tableone/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Challen. Author, maintainer.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Challen R (2022). tableone: Descriptive Tables Observational Interventional Studies. https://bristol-vaccine-centre.github.io/tableone/, https://github.com/bristol-vaccine-centre/tableone, https://doi.org/10.5281/zenodo.7226522.","code":"@Manual{,   title = {tableone: Descriptive Tables for Observational or Interventional Studies},   author = {Robert Challen},   year = {2022},   note = {https://bristol-vaccine-centre.github.io/tableone/, https://github.com/bristol-vaccine-centre/tableone, https://doi.org/10.5281/zenodo.7226522}, }"},{"path":"https://bristol-vaccine-centre.github.io/tableone/index.html","id":"tableone-descriptive-tables-for-observational-or-interventional-studies","dir":"","previous_headings":"","what":"Descriptive Tables for Observational or Interventional Studies","title":"Descriptive Tables for Observational or Interventional Studies","text":"goal tableone make easy generate comparison tables journal publication. converts line list experimental observational data summary table can grouped intervention. Reporting summaries kind data aware missing items, provide summary statistics statistical comparisons appropriate data. amenable automated decision making frequently automation must overridden. tableone provides automated one command statistical summary table output highly configurable. resulting tables huxtable format ready export wide range file types.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Descriptive Tables for Observational or Interventional Studies","text":"can install development version tableone GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"bristol-vaccine-centre/tableone\")"},{"path":"https://bristol-vaccine-centre.github.io/tableone/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Descriptive Tables for Observational or Interventional Studies","text":"tableone make descriptive stats consistent easy. Summarising dataset nicely formatted summary table (although seen best github readme) simple following code. proper formatted output head main documentation website. huxtable output table can saved wide range formats spreadsheets documents latex html (even github README.md limited success). default output tableone can substantially customised fit specific journal’s requirements.","code":"library(tidyverse) #> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ── #> ✔ ggplot2 3.3.6      ✔ purrr   0.3.4  #> ✔ tibble  3.1.8      ✔ dplyr   1.0.10 #> ✔ tidyr   1.2.1      ✔ stringr 1.4.1  #> ✔ readr   2.1.2      ✔ forcats 0.5.2  #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() library(tableone) #>  #> Attaching package: 'tableone' #>  #> The following object is masked from 'package:ggplot2': #>  #>     diamonds # hide messages  old = options(tableone.quiet = TRUE)   # generate table  iris %>%    describe_population(everything()) #> Warning in to_md.huxtable(structure(list(variable = c(\"variable\", #> \"Sepal.Length\", : Markdown cannot handle cells with colspan/rowspan > 1 # reset options options(old)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/bad_test_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of columns for a test case — bad_test_cols","title":"A list of columns for a test case — bad_test_cols","text":"list columns test case","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/bad_test_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of columns for a test case — bad_test_cols","text":"","code":"bad_test_cols"},{"path":[]},{"path":[]},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/compare_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Compares missing data against an intervention in a summary table — compare_missing","title":"Compares missing data against an intervention in a summary table — compare_missing","text":"missing data summary simple summary missingness co-variates data set reference outcome, comparing intervention groups. reports summary counts missingness data reports significance missingness relation intervention groups, allowing clear summary whether data missing random compared intervention.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/compare_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compares missing data against an intervention in a summary table — compare_missing","text":"","code":"compare_missing(   df,   ...,   label_fn = ~.x,   p_format = names(.pvalue.defaults),   font_size = getOption(\"tableone.font_size\", 8),   font = getOption(\"tableone.font\", \"Arial\"),   footer_text = NULL )"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/compare_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compares missing data against an intervention in a summary table — compare_missing","text":"df dataframe individual observations. using tidyselect syntax data grouping defines intervention group present. formula interface used first variable right hand side formula used intervention, case grouping ignored. ... columns variables wish summarise. can given tidyselect specification (see utils::vignette(\"syntax\", package = \"tidyselect\")), identifying columns. Alternatively can given formula nature outcome ~ intervention + covariate_1 + covariate_2 + ... . may convenient going model fit later. latter format left hand side ignored (outcomes usual kind table). label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"tableone.labeller\" = my_label_fn) allows global setting labeller. p_format format p-values: one \"sampl\", \"nejm\", \"jama\", \"lancet\", \"aim\" value overridden option(\"tableone.pvalue_formatter\"=function(...)) font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"tableone.hide_footer\"=TRUE)) .","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/compare_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compares missing data against an intervention in a summary table — compare_missing","text":"huxtable formatted table.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/compare_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compares missing data against an intervention in a summary table — compare_missing","text":"","code":"# this option lets us change the column name for p value from its default # \"P value\" old = options(\"tableone.pvalue_column_name\"=\"p-value\")  # missing at random missing_diamonds %>% dplyr::group_by(is_colored) %>% compare_missing(tidyselect::everything()) #> Warning: restarting interrupted promise evaluation #> subtype_count summary for carat #> subtype_count summary for cut #> subtype_count summary for color #> subtype_count summary for clarity #> subtype_count summary for depth #> subtype_count summary for table #> subtype_count summary for price #> subtype_count summary for x #> subtype_count summary for y #> subtype_count summary for z #> fisher test on carat #> fisher test on cut #> fisher test on color #> fisher test on clarity #> fisher test on depth #> fisher test on table #> fisher test on price #> fisher test on x #> fisher test on y #> fisher test on z #>  ───────────────────────────────────────────────────────────────────────────── #>                       clear              colored                               #>    variable           missing % (N)      missing % (N)      p-value            #>  ───────────────────────────────────────────────────────────────────────────── #>    carat              10.0%              9.7%               0.26               #>                       (1651/16572)       (3607/37368)                          #>    cut                9.6%               10.2%              0.05               #>                       (1592/16572)       (3795/37368)                          #>    color              9.7%               10.1%              0.18               #>                       (1607/16572)       (3764/37368)                          #>    clarity            10.2%              10.0%              0.49               #>                       (1685/16572)       (3728/37368)                          #>    depth              10.0%              9.9%               0.84               #>                       (1652/16572)       (3704/37368)                          #>    table              9.9%               9.6%               0.22               #>                       (1647/16572)       (3586/37368)                          #>    price              9.6%               9.8%               0.35               #>                       (1587/16572)       (3678/37368)                          #>    x                  9.9%               10.0%              0.65               #>                       (1633/16572)       (3730/37368)                          #>    y                  10.1%              9.9%               0.39               #>                       (1675/16572)       (3687/37368)                          #>    z                  9.6%               10.2%              0.04               #>                       (1587/16572)       (3794/37368)                          #>  ───────────────────────────────────────────────────────────────────────────── #>    Signifiance determined using Fisher's exact test (categorical               #>    variables)                                                                  #>  #> Column names: variable, 1, 2, p-value  # nothing missing iris %>% dplyr::group_by(Species) %>% compare_missing(tidyselect::everything()) #> Warning: restarting interrupted promise evaluation #> subtype_count summary for Sepal.Length #> subtype_count summary for Sepal.Width #> subtype_count summary for Petal.Length #> subtype_count summary for Petal.Width #> fisher test on Sepal.Length #> fisher test on Sepal.Width #> fisher test on Petal.Length #> fisher test on Petal.Width #>   ──────────────────────────────────────────────────────────────────────────── #>                    setosa         versicolor     virginica                     #>     variable       missing %      missing %      missing %      p-value        #>                    (N)            (N)            (N)                           #>   ──────────────────────────────────────────────────────────────────────────── #>     Sepal.Length   0.0% (0/50)    0.0% (0/50)    0.0% (0/50)    —              #>     Sepal.Width    0.0% (0/50)    0.0% (0/50)    0.0% (0/50)    —              #>     Petal.Length   0.0% (0/50)    0.0% (0/50)    0.0% (0/50)    —              #>     Petal.Width    0.0% (0/50)    0.0% (0/50)    0.0% (0/50)    —              #>   ──────────────────────────────────────────────────────────────────────────── #>     Signifiance determined using Fisher's exact test                           #>     (categorical variables)                                                    #>  #> Column names: variable, 1, 2, 3, p-value  # MNAR: by design missingness is correlated with grouping mnar_two_class_1000 %>% dplyr::group_by(grouping) %>% compare_missing(tidyselect::everything()) #> Warning: restarting interrupted promise evaluation #> subtype_count summary for uniform_variable #> subtype_count summary for normal_variable #> subtype_count summary for binomial_class #> subtype_count summary for multinom_class #> subtype_count summary for discrete #> subtype_count summary for ignore_me #> fisher test on uniform_variable #> fisher test on normal_variable #> fisher test on binomial_class #> fisher test on multinom_class #> fisher test on discrete #> fisher test on ignore_me #>  ───────────────────────────────────────────────────────────────────────────── #>                       10% missing        20% missing                           #>    variable           missing % (N)      missing % (N)      p-value            #>  ───────────────────────────────────────────────────────────────────────────── #>    uniform_variable   9.3% (93/1000)     20.4% (204/1000)   <0.001             #>    normal_variable    10.6% (106/1000)   20.7% (207/1000)   <0.001             #>    binomial_class     9.6% (96/1000)     18.0% (180/1000)   <0.001             #>    multinom_class     8.9% (89/1000)     20.3% (203/1000)   <0.001             #>    discrete           8.0% (80/1000)     19.7% (197/1000)   <0.001             #>    ignore_me          100.0%             100.0%             1                  #>                       (1000/1000)        (1000/1000)                           #>  ───────────────────────────────────────────────────────────────────────────── #>    Signifiance determined using Fisher's exact test (categorical               #>    variables)                                                                  #>  #> Column names: variable, 1, 2, p-value  options(old)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/compare_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Compares the population against an intervention in a summary table — compare_population","title":"Compares the population against an intervention in a summary table — compare_population","text":"population comparison summary co-variates data set reference outcome, comparing intervention groups. report summary statistics continuous counts categorical data, intervention groups, reports significance association relation intervention groups. gives clear summary whether data correlated intervention.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/compare_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compares the population against an intervention in a summary table — compare_population","text":"","code":"compare_population(   df,   ...,   label_fn = ~.x,   units = list(),   override_type = list(),   layout = \"compact\",   override_percent_dp = list(),   override_real_dp = list(),   p_format = names(.pvalue.defaults),   font_size = getOption(\"tableone.font_size\", 8),   font = getOption(\"tableone.font\", \"Arial\"),   footer_text = NULL )"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/compare_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compares the population against an intervention in a summary table — compare_population","text":"df dataframe individual observations. using tidyselect syntax data grouping defines intervention group present. formula interface used first variable right hand side formula used intervention, case grouping ignored. ... columns variables wish summarise. can given tidyselect specification (see utils::vignette(\"syntax\", package = \"tidyselect\")), identifying columns. Alternatively can given formula nature outcome ~ intervention + covariate_1 + covariate_2 + ... . may convenient going model fit later. latter format left hand side ignored (outcomes usual kind table). label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"tableone.labeller\" = my_label_fn) allows global setting labeller. units (optional) named list units, following c(<colname_1> = \"<unit_1>\", <colname_2> = \"<unit_2>\", ...) format. columns present list assumed units. Units may involved formatting summary output. override_type (optional) named list data summary types. default type column data set calculated using heurisitics depending nature data (categorical continuous), result normality tests. want override options \"subtype_count\",\"median_iqr\",\"mean_sd\",\"skipped\" specify column column bases named list (e.g c(\"Petal.Width\"=\"mean_sd\")). Overriding default check type data correct summary type potentially cause errors done correctly. layout (optional) various layouts defined default. version tableone \"relaxed\",\"compact\",\"simple\",\"single\",\"missing\". layouts can customised using options options(\"tableone.format_list\"=list(...)\"), described detail vignettes. override_percent_dp (optional) named list overrides default precision formatting percentages, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See vignette customisation. override_real_dp (optional) named list overrides default precision formatting real values, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See utils::vignette(\"customisation\", package=\"tableone\"). p_format format p-values: one \"sampl\", \"nejm\", \"jama\", \"lancet\", \"aim\" value overridden option(\"tableone.pvalue_formatter\"=function(...)) font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"tableone.hide_footer\"=TRUE)) .","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/compare_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compares the population against an intervention in a summary table — compare_population","text":"huxtable formatted table.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/compare_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compares the population against an intervention in a summary table — compare_population","text":"","code":"# the heuristics detect that Petals in the iris data set are not normally # distributed and hence report median and IQR: iris %>% dplyr::group_by(Species) %>% compare_population(tidyselect::everything()) #> Warning: restarting interrupted promise evaluation #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> median_iqr summary for Petal.Length #> median_iqr summary for Petal.Width #> anova test on Sepal.Length #> anova test on Sepal.Width #> kruskal-wallis test on Petal.Length #> kruskal-wallis test on Petal.Width #> ─────────────────────────────────────────────────────────────────────────────── #>                             setosa       versicolor   virginica                 #>   variable     characteri   value        value        value        P value      #>                stic                                                             #> ─────────────────────────────────────────────────────────────────────────────── #>   Sepal.Leng   Mean ± SD    5.01 ±       5.94 ±       6.59 ±       <0.001       #>   th           (N)          0.352 (50)   0.516 (50)   0.636 (50)                #>   Sepal.Widt   Mean ± SD    3.43 ±       2.77 ±       2.97 ±       <0.001       #>   h            (N)          0.379 (50)   0.314 (50)   0.322 (50)                #>   Petal.Leng   Median       1.5          4.35         5.55         <0.001       #>   th           [IQR] (N)    [1.4—1.58]   [4—4.6]      [5.1—5.88]                #>                             (50)         (50)         (50)                      #>   Petal.Widt   Median       0.2          1.3          2            <0.001       #>   h            [IQR] (N)    [0.2—0.3]    [1.2—1.5]    [1.8—2.3]                 #>                             (50)         (50)         (50)                      #> ─────────────────────────────────────────────────────────────────────────────── #>   Signifiance determined using Analysis of variance (linear                     #>   model), Kruskal-Wallis rank sum test (continuous variables)                   #>   Normality of distributions determined using Anderson-Darling                  #>   normality test                                                                #>  #> Column names: variable, characteristic, 1, 2, 3, P value  # Missing data old = options(\"tableone.show_pvalue_method\"=TRUE) missing_diamonds %>% dplyr::group_by(is_colored) %>% compare_population(-color, layout=\"relaxed\") #> Warning: restarting interrupted promise evaluation #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> 2-sided wilcoxon test on carat #> Significance testing skipped due to missing values: carat #> fisher test on cut #> Significance testing skipped due to missing values: cut #> fisher test on clarity #> Significance testing skipped due to missing values: clarity #> 2-sided wilcoxon test on depth #> Significance testing skipped due to missing values: depth #> 2-sided wilcoxon test on table #> Significance testing skipped due to missing values: table #> 2-sided wilcoxon test on price #> Significance testing skipped due to missing values: price #> 2-sided wilcoxon test on x #> Significance testing skipped due to missing values: x #> 2-sided wilcoxon test on y #> Significance testing skipped due to missing values: y #> 2-sided wilcoxon test on z #> Significance testing skipped due to missing values: z #>  ───────────────────────────────────────────────────────────────────────────── #>                          clear                 colored                         #>    variable   characte   value      count      value      count      P value   #>               ristic                                                           #>  ───────────────────────────────────────────────────────────────────────────── #>    carat      Median     0.53       14921      0.74       33761      — †       #>               [IQR]      [0.36—0.              [0.41—1.                        #>                          9]                    13]                             #>  ───────────────────────────────────────────────────────────────────────────── #>    cut        Fair %     2.3%       349/1498   3.3%       1105/335   — ††      #>               [95% CI]   [2.1%—2.   0          [3.1%—3.   73                   #>                          6%]                   5%]                             #>               Good %     9.7%       1449/149   9.0%       3013/335             #>               [95% CI]   [9.2%—10   80         [8.7%—9.   73                   #>                          .2%]                  3%]                             #>               Very       23.7%      3550/149   21.6%      7266/335             #>               Good %     [23.0%—2   80         [21.2%—2   73                   #>               [95% CI]   4.4%]                 2.1%]                           #>               Premium    23.7%      3556/149   26.5%      8904/335             #>               % [95%     [23.1%—2   80         [26.1%—2   73                   #>               CI]        4.4%]                 7.0%]                           #>               Ideal %    40.6%      6076/149   39.6%      13285/33             #>               [95% CI]   [39.8%—4   80         [39.0%—4   573                  #>                          1.3%]                 0.1%]                           #>  ───────────────────────────────────────────────────────────────────────────── #>    clarity    I1 %       0.9%       129/1488   1.6%       535/3364   — ††      #>               [95% CI]   [0.7%—1.   7          [1.5%—1.   0                    #>                          0%]                   7%]                             #>               SI2 %      18.5%      2755/148   16.4%      5510/336             #>               [95% CI]   [17.9%—1   87         [16.0%—1   40                   #>                          9.1%]                 6.8%]                           #>               SI1 %      27.3%      4064/148   22.9%      7692/336             #>               [95% CI]   [26.6%—2   87         [22.4%—2   40                   #>                          8.0%]                 3.3%]                           #>               VS2 %      25.1%      3733/148   21.7%      7287/336             #>               [95% CI]   [24.4%—2   87         [21.2%—2   40                   #>                          5.8%]                 2.1%]                           #>               VS1 %      12.1%      1798/148   16.5%      5557/336             #>               [95% CI]   [11.6%—1   87         [16.1%—1   40                   #>                          2.6%]                 6.9%]                           #>               VVS2 %     9.3%       1390/148   9.5%       3180/336             #>               [95% CI]   [8.9%—9.   87         [9.1%—9.   40                   #>                          8%]                   8%]                             #>               VVS1 %     5.4%       809/1488   7.4%       2489/336             #>               [95% CI]   [5.1%—5.   7          [7.1%—7.   40                   #>                          8%]                   7%]                             #>               IF %       1.4%       209/1488   4.1%       1390/336             #>               [95% CI]   [1.2%—1.   7          [3.9%—4.   40                   #>                          6%]                   3%]                             #>  ───────────────────────────────────────────────────────────────────────────── #>    depth      Median     61.8       14920      61.9       33664      — †       #>               [IQR]      [61—62.5              [61.1—62                        #>                          ]                     .5]                             #>  ───────────────────────────────────────────────────────────────────────────── #>    table      Median     57         14925      57         33782      — †       #>               [IQR]      [56—59]               [56—59]                         #>  ───────────────────────────────────────────────────────────────────────────── #>    price      Median     1.78e+03   14985      2.79e+03   33690      — †       #>               [IQR]      [893—4.1              [992—6.0                        #>                          2e+03]                1e+03]                          #>  ───────────────────────────────────────────────────────────────────────────── #>    x          Median     5.24       14939      5.83       33638      — †       #>               [IQR]      [4.58—6.              [4.77—6.                        #>                          18]                   7]                              #>  ───────────────────────────────────────────────────────────────────────────── #>    y          Median     5.24       14897      5.85       33681      — †       #>               [IQR]      [4.58—6.              [4.78—6.                        #>                          18]                   69]                             #>  ───────────────────────────────────────────────────────────────────────────── #>    z          Median     3.22       14985      3.6        33574      — †       #>               [IQR]      [2.81—3.              [2.95—4.                        #>                          83]                   13]                             #>  ───────────────────────────────────────────────────────────────────────────── #>    †, Not calculated due to missing values (continuous);                       #>    ††, Not calculated due to missing values (categorical)                      #>    Normality of distributions determined using                                 #>    Anderson-Darling normality test                                             #>  #> Column names: variable, characteristic, 1, 2, 3, 4, P value  tmp = missing_diamonds %>% explicit_na() %>% dplyr::group_by(is_colored) tmp %>% compare_population(-color,     footer_text = c(       \"IQR: Interquartile range; CI: Confidence interval\",       \"Line two\")     ) #> Warning: restarting interrupted promise evaluation #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> 2-sided wilcoxon test on carat #> Significance testing skipped due to missing values: carat #> fisher test on cut #> fisher test on clarity #> 2-sided wilcoxon test on depth #> Significance testing skipped due to missing values: depth #> 2-sided wilcoxon test on table #> Significance testing skipped due to missing values: table #> 2-sided wilcoxon test on price #> Significance testing skipped due to missing values: price #> 2-sided wilcoxon test on x #> Significance testing skipped due to missing values: x #> 2-sided wilcoxon test on y #> Significance testing skipped due to missing values: y #> 2-sided wilcoxon test on z #> Significance testing skipped due to missing values: z #>      ───────────────────────────────────────────────────────────────────── #>                                  clear          colored                    #>        variable   characterist   value          value          P value     #>                   ic                                                       #>      ───────────────────────────────────────────────────────────────────── #>        carat      Median [IQR]   0.53           0.74           — †         #>                   (N)            [0.36—0.9]     [0.41—1.13]                #>                                  (14921)        (33761)                    #>      ───────────────────────────────────────────────────────────────────── #>        cut        Fair % [95%    2.1%           3.0%           <0.001 ††   #>                   CI] (N)        [1.9%—2.3%]    [2.8%—3.1%]                #>                                  (349)          (1105)                     #>                   Good % [95%    8.7%           8.1%                       #>                   CI] (N)        [8.3%—9.2%]    [7.8%—8.3%]                #>                                  (1449)         (3013)                     #>                   Very Good %    21.4%          19.4%                      #>                   [95% CI] (N)   [20.8%—22.1%   [19.0%—19.8%               #>                                  ] (3550)       ] (7266)                   #>                   Premium %      21.5%          23.8%                      #>                   [95% CI] (N)   [20.8%—22.1%   [23.4%—24.3%               #>                                  ] (3556)       ] (8904)                   #>                   Ideal % [95%   36.7%          35.6%                      #>                   CI] (N)        [35.9%—37.4%   [35.1%—36.0%               #>                                  ] (6076)       ] (13285)                  #>                   <missing> %    9.6%           10.2%                      #>                   [95% CI] (N)   [9.2%—10.1%]   [9.9%—10.5%]               #>                                  (1592)         (3795)                     #>      ───────────────────────────────────────────────────────────────────── #>        clarity    I1 % [95%      0.8%           1.4%           <0.001 ††   #>                   CI] (N)        [0.7%—0.9%]    [1.3%—1.6%]                #>                                  (129)          (535)                      #>                   SI2 % [95%     16.6%          14.7%                      #>                   CI] (N)        [16.1%—17.2%   [14.4%—15.1%               #>                                  ] (2755)       ] (5510)                   #>                   SI1 % [95%     24.5%          20.6%                      #>                   CI] (N)        [23.9%—25.2%   [20.2%—21.0%               #>                                  ] (4064)       ] (7692)                   #>                   VS2 % [95%     22.5%          19.5%                      #>                   CI] (N)        [21.9%—23.2%   [19.1%—19.9%               #>                                  ] (3733)       ] (7287)                   #>                   VS1 % [95%     10.8%          14.9%                      #>                   CI] (N)        [10.4%—11.3%   [14.5%—15.2%               #>                                  ] (1798)       ] (5557)                   #>                   VVS2 % [95%    8.4%           8.5%                       #>                   CI] (N)        [8.0%—8.8%]    [8.2%—8.8%]                #>                                  (1390)         (3180)                     #>                   VVS1 % [95%    4.9%           6.7%                       #>                   CI] (N)        [4.6%—5.2%]    [6.4%—6.9%]                #>                                  (809)          (2489)                     #>                   IF % [95%      1.3%           3.7%                       #>                   CI] (N)        [1.1%—1.4%]    [3.5%—3.9%]                #>                                  (209)          (1390)                     #>                   <missing> %    10.2%          10.0%                      #>                   [95% CI] (N)   [9.7%—10.6%]   [9.7%—10.3%]               #>                                  (1685)         (3728)                     #>      ───────────────────────────────────────────────────────────────────── #>        depth      Median [IQR]   61.8           61.9           — †         #>                   (N)            [61—62.5]      [61.1—62.5]                #>                                  (14920)        (33664)                    #>      ───────────────────────────────────────────────────────────────────── #>        table      Median [IQR]   57 [56—59]     57 [56—59]     — †         #>                   (N)            (14925)        (33782)                    #>      ───────────────────────────────────────────────────────────────────── #>        price      Median [IQR]   1.78e+03       2.79e+03       — †         #>                   (N)            [893—4.12e+0   [992—6.01e+0               #>                                  3] (14985)     3] (33690)                 #>      ───────────────────────────────────────────────────────────────────── #>        x          Median [IQR]   5.24           5.83           — †         #>                   (N)            [4.58—6.18]    [4.77—6.7]                 #>                                  (14939)        (33638)                    #>      ───────────────────────────────────────────────────────────────────── #>        y          Median [IQR]   5.24           5.85           — †         #>                   (N)            [4.58—6.18]    [4.78—6.69]                #>                                  (14897)        (33681)                    #>      ───────────────────────────────────────────────────────────────────── #>        z          Median [IQR]   3.22           3.6            — †         #>                   (N)            [2.81—3.83]    [2.95—4.13]                #>                                  (14985)        (33574)                    #>      ───────────────────────────────────────────────────────────────────── #>        †, Not calculated due to missing values (continuous);               #>        ††, Fisher's exact test (categorical)                               #>        Normality of distributions determined using                         #>        Anderson-Darling normality test                                     #>        IQR: Interquartile range; CI: Confidence interval                   #>        Line two                                                            #>  #> Column names: variable, characteristic, 1, 2, P value  options(old)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/default.format.html","id":null,"dir":"Reference","previous_headings":"","what":"Default table layout functions — default.format","title":"Default table layout functions — default.format","text":"Customisation output can use one entries starting point. custom layout look like one entries level 2 nested list, containing 4 named entries, one type table summary.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/default.format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default table layout functions — default.format","text":"","code":"default.format"},{"path":[]},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/default.format.html","id":"default-format","dir":"Reference","previous_headings":"","what":"default.format","title":"Default table layout functions — default.format","text":"names list lists: level one name table layout level two name summary type required. one subtype_count, median_iqr,mean_sd,skipped level three named list column=glue specification pairs. column (glue spec) might reference N_total, N_present .unit typically fixed string- defines name table column generate. glue specification defines layout column, can use summary statistics subtype_count can use level, prob.0.5, prob.0.025, prob.0.975, unit, n, N. n subgroup count, N data count. median_iqr can use q.0.5, q.0.25, ..., unit, n, N - n excludes missing, N . mean_sd can use mean, sd, unit, n, N - n excludes missing, N . skipped can use n, N - n excludes missing, N .","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/describe_population.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe the population in a summary table — describe_population","title":"Describe the population in a summary table — describe_population","text":"population description simple summary co-variates data set reference outcome, comparing intervention (although might contain intervention rates.) report summary statistics continuous counts categorical data,","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/describe_population.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe the population in a summary table — describe_population","text":"","code":"describe_population(   df,   ...,   label_fn = ~.x,   units = list(),   override_type = list(),   layout = \"single\",   override_percent_dp = list(),   override_real_dp = list(),   font_size = getOption(\"tableone.font_size\", 8),   font = getOption(\"tableone.font\", \"Arial\"),   footer_text = NULL )"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/describe_population.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe the population in a summary table — describe_population","text":"df dataframe individual observations. Grouping, present, ignored. (n.b. wanted construct multiple summary tables dplyr::group_map() call used) ... columns variables wish summarise. can given tidyselect specification (see utils::vignette(\"syntax\", package = \"tidyselect\")), identifying columns. Alternatively can given formula nature outcome ~ intervention + covariate_1 + covariate_2 + ... . may convenient going model fit. latter format left hand side ignored (outcomes usual kind table). label_fn (optional) function mapping co-variate column name printable label. default -operation output table contain dataframe column names labels. simple alternative form dplyr::case_when lookup, string function stringr::str_to_sentence. (N.b. function must vectorised). value provided overridden options(\"tableone.labeller\" = my_label_fn) allows global setting labeller. units (optional) named list units, following c(<colname_1> = \"<unit_1>\", <colname_2> = \"<unit_2>\", ...) format. columns present list assumed units. Units may involved formatting summary output. override_type (optional) named list data summary types. default type column data set calculated using heurisitics depending nature data (categorical continuous), result normality tests. want override options \"subtype_count\",\"median_iqr\",\"mean_sd\",\"skipped\" specify column column bases named list (e.g c(\"Petal.Width\"=\"mean_sd\")). Overriding default check type data correct summary type potentially cause errors done correctly. layout (optional) various layouts defined default. version tableone \"relaxed\",\"compact\",\"simple\",\"single\",\"missing\". layouts can customised using options options(\"tableone.format_list\"=list(...)\"), described detail vignettes. override_percent_dp (optional) named list overrides default precision formatting percentages, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See vignette customisation. override_real_dp (optional) named list overrides default precision formatting real values, following c(<colname_1> = 2, <colname_2> = 4, ...) format. columns present list use defaults defined layout. See utils::vignette(\"customisation\", package=\"tableone\"). font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"tableone.hide_footer\"=TRUE)) .","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/describe_population.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe the population in a summary table — describe_population","text":"huxtable formatted table.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/describe_population.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Describe the population in a summary table — describe_population","text":"","code":"# the heuristics detect that Petals in the iris data set are not normally # distributed and hence report median and IQR: iris %>% describe_population(tidyselect::everything()) #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> median_iqr summary for Petal.Length #> median_iqr summary for Petal.Width #> subtype_count summary for Species #>  ───────────────────────────────────────────────────────────────────────────── #>    variable           characteristic     value              count (N=150)      #>  ───────────────────────────────────────────────────────────────────────────── #>    Sepal.Length       Mean ± SD          5.84 ± 0.828       150                #>  ───────────────────────────────────────────────────────────────────────────── #>    Sepal.Width        Mean ± SD          3.06 ± 0.436       150                #>  ───────────────────────────────────────────────────────────────────────────── #>    Petal.Length       Median [IQR]       4.35 [1.6—5.1]     150                #>  ───────────────────────────────────────────────────────────────────────────── #>    Petal.Width        Median [IQR]       1.3 [0.3—1.8]      150                #>  ───────────────────────────────────────────────────────────────────────────── #>    Species            setosa % [95%      33.3%              50/150             #>                       CI]                [26.3%—41.2%]                         #>                       versicolor %       33.3%              50/150             #>                       [95% CI]           [26.3%—41.2%]                         #>                       virginica % [95%   33.3%              50/150             #>                       CI]                [26.3%—41.2%]                         #>  ───────────────────────────────────────────────────────────────────────────── #>    Normality of distributions determined using Anderson-Darling                #>    normality test                                                              #>  #> Column names: variable, characteristic, 1, 2  # Overriding the heuristics is possible: iris %>% describe_population(   tidyselect::everything(),   override_type = c(Petal.Length = \"mean_sd\", Petal.Width = \"mean_sd\") ) #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> mean_sd summary for Petal.Length #> mean_sd summary for Petal.Width #> subtype_count summary for Species #>  ───────────────────────────────────────────────────────────────────────────── #>    variable           characteristic     value              count (N=150)      #>  ───────────────────────────────────────────────────────────────────────────── #>    Sepal.Length       Mean ± SD          5.84 ± 0.828       150                #>  ───────────────────────────────────────────────────────────────────────────── #>    Sepal.Width        Mean ± SD          3.06 ± 0.436       150                #>  ───────────────────────────────────────────────────────────────────────────── #>    Petal.Length       Mean ± SD          3.76 ± 1.77        150                #>  ───────────────────────────────────────────────────────────────────────────── #>    Petal.Width        Mean ± SD          1.2 ± 0.762        150                #>  ───────────────────────────────────────────────────────────────────────────── #>    Species            setosa % [95%      33.3%              50/150             #>                       CI]                [26.3%—41.2%]                         #>                       versicolor %       33.3%              50/150             #>                       [95% CI]           [26.3%—41.2%]                         #>                       virginica % [95%   33.3%              50/150             #>                       CI]                [26.3%—41.2%]                         #>  ───────────────────────────────────────────────────────────────────────────── #>    Normality of distributions determined using Anderson-Darling                #>    normality test                                                              #>  #> Column names: variable, characteristic, 1, 2  # The counts sometimes seem redundant if there is no missing information: diamonds %>% describe_population(tidyselect::everything()) #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for color #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> subtype_count summary for is_colored #>      ────────────────────────────────────────────────────────────────────── #>        variable     characteristic     value              count (N=53940)   #>      ────────────────────────────────────────────────────────────────────── #>        carat        Median [IQR]       0.7 [0.4—1.04]     53940             #>      ────────────────────────────────────────────────────────────────────── #>        cut          Fair % [95% CI]    3.0% [2.8%—3.1%]   1610/53940        #>                     Good % [95% CI]    9.1% [8.9%—9.3%]   4906/53940        #>                     Very Good % [95%   22.4%              12082/53940       #>                     CI]                [22.0%—22.8%]                        #>                     Premium % [95%     25.6%              13791/53940       #>                     CI]                [25.2%—25.9%]                        #>                     Ideal % [95% CI]   40.0%              21551/53940       #>                                        [39.5%—40.4%]                        #>      ────────────────────────────────────────────────────────────────────── #>        color        D % [95% CI]       12.6%              6775/53940        #>                                        [12.3%—12.8%]                        #>                     E % [95% CI]       18.2%              9797/53940        #>                                        [17.8%—18.5%]                        #>                     F % [95% CI]       17.7%              9542/53940        #>                                        [17.4%—18.0%]                        #>                     G % [95% CI]       20.9%              11292/53940       #>                                        [20.6%—21.3%]                        #>                     H % [95% CI]       15.4%              8304/53940        #>                                        [15.1%—15.7%]                        #>                     I % [95% CI]       10.1%              5422/53940        #>                                        [9.8%—10.3%]                         #>                     J % [95% CI]       5.2% [5.0%—5.4%]   2808/53940        #>      ────────────────────────────────────────────────────────────────────── #>        clarity      I1 % [95% CI]      1.4% [1.3%—1.5%]   741/53940         #>                     SI2 % [95% CI]     17.0%              9194/53940        #>                                        [16.7%—17.4%]                        #>                     SI1 % [95% CI]     24.2%              13065/53940       #>                                        [23.9%—24.6%]                        #>                     VS2 % [95% CI]     22.7%              12258/53940       #>                                        [22.4%—23.1%]                        #>                     VS1 % [95% CI]     15.1%              8171/53940        #>                                        [14.8%—15.5%]                        #>                     VVS2 % [95% CI]    9.4% [9.1%—9.6%]   5066/53940        #>                     VVS1 % [95% CI]    6.8% [6.6%—7.0%]   3655/53940        #>                     IF % [95% CI]      3.3% [3.2%—3.5%]   1790/53940        #>      ────────────────────────────────────────────────────────────────────── #>        depth        Median [IQR]       61.8 [61—62.5]     53940             #>      ────────────────────────────────────────────────────────────────────── #>        table        Median [IQR]       57 [56—59]         53940             #>      ────────────────────────────────────────────────────────────────────── #>        price        Median [IQR]       2.4e+03            53940             #>                                        [950—5.32e+03]                       #>      ────────────────────────────────────────────────────────────────────── #>        x            Median [IQR]       5.7 [4.71—6.54]    53940             #>      ────────────────────────────────────────────────────────────────────── #>        y            Median [IQR]       5.71 [4.72—6.54]   53940             #>      ────────────────────────────────────────────────────────────────────── #>        z            Median [IQR]       3.53 [2.91—4.04]   53940             #>      ────────────────────────────────────────────────────────────────────── #>        is_colored   clear % [95% CI]   30.7%              16572/53940       #>                                        [30.3%—31.1%]                        #>                     colored % [95%     69.3%              37368/53940       #>                     CI]                [68.9%—69.7%]                        #>      ────────────────────────────────────────────────────────────────────── #>        Normality of distributions determined using                          #>        Anderson-Darling normality test                                      #>  #> Column names: variable, characteristic, 1, 2  # however in a data set with missing values the denominators are important: missing_diamonds %>% describe_population(tidyselect::everything()) #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for color #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> subtype_count summary for is_colored #>      ────────────────────────────────────────────────────────────────────── #>        variable     characteristic     value              count (N=53940)   #>      ────────────────────────────────────────────────────────────────────── #>        carat        Median [IQR]       0.7 [0.4—1.04]     48682             #>      ────────────────────────────────────────────────────────────────────── #>        cut          Fair % [95% CI]    3.0% [2.8%—3.2%]   1454/48553        #>                     Good % [95% CI]    9.2% [8.9%—9.5%]   4462/48553        #>                     Very Good % [95%   22.3%              10816/48553       #>                     CI]                [21.9%—22.6%]                        #>                     Premium % [95%     25.7%              12460/48553       #>                     CI]                [25.3%—26.1%]                        #>                     Ideal % [95% CI]   39.9%              19361/48553       #>                                        [39.4%—40.3%]                        #>      ────────────────────────────────────────────────────────────────────── #>        color        D % [95% CI]       12.5%              6079/48569        #>                                        [12.2%—12.8%]                        #>                     E % [95% CI]       18.3%              8886/48569        #>                                        [18.0%—18.6%]                        #>                     F % [95% CI]       17.7%              8613/48569        #>                                        [17.4%—18.1%]                        #>                     G % [95% CI]       20.9%              10137/48569       #>                                        [20.5%—21.2%]                        #>                     H % [95% CI]       15.4%              7466/48569        #>                                        [15.1%—15.7%]                        #>                     I % [95% CI]       10.0%              4876/48569        #>                                        [9.8%—10.3%]                         #>                     J % [95% CI]       5.2% [5.0%—5.4%]   2512/48569        #>      ────────────────────────────────────────────────────────────────────── #>        clarity      I1 % [95% CI]      1.4% [1.3%—1.5%]   664/48527         #>                     SI2 % [95% CI]     17.0%              8265/48527        #>                                        [16.7%—17.4%]                        #>                     SI1 % [95% CI]     24.2%              11756/48527       #>                                        [23.8%—24.6%]                        #>                     VS2 % [95% CI]     22.7%              11020/48527       #>                                        [22.3%—23.1%]                        #>                     VS1 % [95% CI]     15.2%              7355/48527        #>                                        [14.8%—15.5%]                        #>                     VVS2 % [95% CI]    9.4% [9.2%—9.7%]   4570/48527        #>                     VVS1 % [95% CI]    6.8% [6.6%—7.0%]   3298/48527        #>                     IF % [95% CI]      3.3% [3.1%—3.5%]   1599/48527        #>      ────────────────────────────────────────────────────────────────────── #>        depth        Median [IQR]       61.8 [61—62.5]     48584             #>      ────────────────────────────────────────────────────────────────────── #>        table        Median [IQR]       57 [56—59]         48707             #>      ────────────────────────────────────────────────────────────────────── #>        price        Median [IQR]       2.41e+03           48675             #>                                        [952—5.33e+03]                       #>      ────────────────────────────────────────────────────────────────────── #>        x            Median [IQR]       5.69 [4.72—6.54]   48577             #>      ────────────────────────────────────────────────────────────────────── #>        y            Median [IQR]       5.71 [4.72—6.54]   48578             #>      ────────────────────────────────────────────────────────────────────── #>        z            Median [IQR]       3.52 [2.91—4.03]   48559             #>      ────────────────────────────────────────────────────────────────────── #>        is_colored   clear % [95% CI]   30.7%              16572/53940       #>                                        [30.3%—31.1%]                        #>                     colored % [95%     69.3%              37368/53940       #>                     CI]                [68.9%—69.7%]                        #>      ────────────────────────────────────────────────────────────────────── #>        Normality of distributions determined using                          #>        Anderson-Darling normality test                                      #>  #> Column names: variable, characteristic, 1, 2  # for factor levels we can make the missing values more explicit missing_diamonds %>% explicit_na() %>%   describe_population(tidyselect::everything()) #> median_iqr summary for carat #> subtype_count summary for cut #> subtype_count summary for color #> subtype_count summary for clarity #> median_iqr summary for depth #> median_iqr summary for table #> median_iqr summary for price #> median_iqr summary for x #> median_iqr summary for y #> median_iqr summary for z #> subtype_count summary for is_colored #>      ────────────────────────────────────────────────────────────────────── #>        variable     characteristic     value              count (N=53940)   #>      ────────────────────────────────────────────────────────────────────── #>        carat        Median [IQR]       0.7 [0.4—1.04]     48682             #>      ────────────────────────────────────────────────────────────────────── #>        cut          Fair % [95% CI]    2.7% [2.6%—2.8%]   1454/53940        #>                     Good % [95% CI]    8.3% [8.0%—8.5%]   4462/53940        #>                     Very Good % [95%   20.1%              10816/53940       #>                     CI]                [19.7%—20.4%]                        #>                     Premium % [95%     23.1%              12460/53940       #>                     CI]                [22.7%—23.5%]                        #>                     Ideal % [95% CI]   35.9%              19361/53940       #>                                        [35.5%—36.3%]                        #>                     <missing> % [95%   10.0%              5387/53940        #>                     CI]                [9.7%—10.2%]                         #>      ────────────────────────────────────────────────────────────────────── #>        color        D % [95% CI]       11.3%              6079/53940        #>                                        [11.0%—11.5%]                        #>                     E % [95% CI]       16.5%              8886/53940        #>                                        [16.2%—16.8%]                        #>                     F % [95% CI]       16.0%              8613/53940        #>                                        [15.7%—16.3%]                        #>                     G % [95% CI]       18.8%              10137/53940       #>                                        [18.5%—19.1%]                        #>                     H % [95% CI]       13.8%              7466/53940        #>                                        [13.6%—14.1%]                        #>                     I % [95% CI]       9.0% [8.8%—9.3%]   4876/53940        #>                     J % [95% CI]       4.7% [4.5%—4.8%]   2512/53940        #>                     <missing> % [95%   10.0%              5371/53940        #>                     CI]                [9.7%—10.2%]                         #>      ────────────────────────────────────────────────────────────────────── #>        clarity      I1 % [95% CI]      1.2% [1.1%—1.3%]   664/53940         #>                     SI2 % [95% CI]     15.3%              8265/53940        #>                                        [15.0%—15.6%]                        #>                     SI1 % [95% CI]     21.8%              11756/53940       #>                                        [21.4%—22.1%]                        #>                     VS2 % [95% CI]     20.4%              11020/53940       #>                                        [20.1%—20.8%]                        #>                     VS1 % [95% CI]     13.6%              7355/53940        #>                                        [13.3%—13.9%]                        #>                     VVS2 % [95% CI]    8.5% [8.2%—8.7%]   4570/53940        #>                     VVS1 % [95% CI]    6.1% [5.9%—6.3%]   3298/53940        #>                     IF % [95% CI]      3.0% [2.8%—3.1%]   1599/53940        #>                     <missing> % [95%   10.0%              5413/53940        #>                     CI]                [9.8%—10.3%]                         #>      ────────────────────────────────────────────────────────────────────── #>        depth        Median [IQR]       61.8 [61—62.5]     48584             #>      ────────────────────────────────────────────────────────────────────── #>        table        Median [IQR]       57 [56—59]         48707             #>      ────────────────────────────────────────────────────────────────────── #>        price        Median [IQR]       2.41e+03           48675             #>                                        [952—5.33e+03]                       #>      ────────────────────────────────────────────────────────────────────── #>        x            Median [IQR]       5.69 [4.72—6.54]   48577             #>      ────────────────────────────────────────────────────────────────────── #>        y            Median [IQR]       5.71 [4.72—6.54]   48578             #>      ────────────────────────────────────────────────────────────────────── #>        z            Median [IQR]       3.52 [2.91—4.03]   48559             #>      ────────────────────────────────────────────────────────────────────── #>        is_colored   clear % [95% CI]   30.7%              16572/53940       #>                                        [30.3%—31.1%]                        #>                     colored % [95%     69.3%              37368/53940       #>                     CI]                [68.9%—69.7%]                        #>      ────────────────────────────────────────────────────────────────────── #>        Normality of distributions determined using                          #>        Anderson-Darling normality test                                      #>  #> Column names: variable, characteristic, 1, 2  # in the output above the price variable is not # presented the way we would # like so here we override the number of decimal places shown for the price # variable while we are at it we will use a mid point for the decimal point, # and make the variable labels sentence case.  old = options(\"tableone.dp\"=\"\\u00B7\") missing_diamonds %>%   explicit_na() %>%   describe_population(     tidyselect::everything(),     label_fn=stringr::str_to_sentence,     override_real_dp=list(price=6)   ) #> median_iqr summary for Carat #> subtype_count summary for Cut #> subtype_count summary for Color #> subtype_count summary for Clarity #> median_iqr summary for Depth #> median_iqr summary for Table #> median_iqr summary for Price #> median_iqr summary for X #> median_iqr summary for Y #> median_iqr summary for Z #> subtype_count summary for Is_colored #>  ───────────────────────────────────────────────────────────────────────────── #>    variable           characteristic     value              count (N=53940)    #>  ───────────────────────────────────────────────────────────────────────────── #>    Carat              Median [IQR]       0·7 [0·4—1·04]     48682              #>  ───────────────────────────────────────────────────────────────────────────── #>    Cut                Fair % [95% CI]    2·7% [2·6%—2·8%]   1454/53940         #>                       Good % [95% CI]    8·3% [8·0%—8·5%]   4462/53940         #>                       Very Good % [95%   20·1%              10816/53940        #>                       CI]                [19·7%—20·4%]                         #>                       Premium % [95%     23·1%              12460/53940        #>                       CI]                [22·7%—23·5%]                         #>                       Ideal % [95% CI]   35·9%              19361/53940        #>                                          [35·5%—36·3%]                         #>                       <missing> % [95%   10·0%              5387/53940         #>                       CI]                [9·7%—10·2%]                          #>  ───────────────────────────────────────────────────────────────────────────── #>    Color              D % [95% CI]       11·3%              6079/53940         #>                                          [11·0%—11·5%]                         #>                       E % [95% CI]       16·5%              8886/53940         #>                                          [16·2%—16·8%]                         #>                       F % [95% CI]       16·0%              8613/53940         #>                                          [15·7%—16·3%]                         #>                       G % [95% CI]       18·8%              10137/53940        #>                                          [18·5%—19·1%]                         #>                       H % [95% CI]       13·8%              7466/53940         #>                                          [13·6%—14·1%]                         #>                       I % [95% CI]       9·0% [8·8%—9·3%]   4876/53940         #>                       J % [95% CI]       4·7% [4·5%—4·8%]   2512/53940         #>                       <missing> % [95%   10·0%              5371/53940         #>                       CI]                [9·7%—10·2%]                          #>  ───────────────────────────────────────────────────────────────────────────── #>    Clarity            I1 % [95% CI]      1·2% [1·1%—1·3%]   664/53940          #>                       SI2 % [95% CI]     15·3%              8265/53940         #>                                          [15·0%—15·6%]                         #>                       SI1 % [95% CI]     21·8%              11756/53940        #>                                          [21·4%—22·1%]                         #>                       VS2 % [95% CI]     20·4%              11020/53940        #>                                          [20·1%—20·8%]                         #>                       VS1 % [95% CI]     13·6%              7355/53940         #>                                          [13·3%—13·9%]                         #>                       VVS2 % [95% CI]    8·5% [8·2%—8·7%]   4570/53940         #>                       VVS1 % [95% CI]    6·1% [5·9%—6·3%]   3298/53940         #>                       IF % [95% CI]      3·0% [2·8%—3·1%]   1599/53940         #>                       <missing> % [95%   10·0%              5413/53940         #>                       CI]                [9·8%—10·3%]                          #>  ───────────────────────────────────────────────────────────────────────────── #>    Depth              Median [IQR]       61·8 [61—62·5]     48584              #>  ───────────────────────────────────────────────────────────────────────────── #>    Table              Median [IQR]       57 [56—59]         48707              #>  ───────────────────────────────────────────────────────────────────────────── #>    Price              Median [IQR]       2407 [952—5330]    48675              #>  ───────────────────────────────────────────────────────────────────────────── #>    X                  Median [IQR]       5·69 [4·72—6·54]   48577              #>  ───────────────────────────────────────────────────────────────────────────── #>    Y                  Median [IQR]       5·71 [4·72—6·54]   48578              #>  ───────────────────────────────────────────────────────────────────────────── #>    Z                  Median [IQR]       3·52 [2·91—4·03]   48559              #>  ───────────────────────────────────────────────────────────────────────────── #>    Is_colored         clear % [95% CI]   30·7%              16572/53940        #>                                          [30·3%—31·1%]                         #>                       colored % [95%     69·3%              37368/53940        #>                       CI]                [68·9%—69·7%]                         #>  ───────────────────────────────────────────────────────────────────────────── #>    Normality of distributions determined using Anderson-Darling                #>    normality test                                                              #>  #> Column names: variable, characteristic, 1, 2 options(old)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/diamonds.html","id":null,"dir":"Reference","previous_headings":"","what":"A copy of the diamonds dataset — diamonds","title":"A copy of the diamonds dataset — diamonds","text":"binary class is_coloured based color column","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/diamonds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A copy of the diamonds dataset — diamonds","text":"","code":"diamonds"},{"path":[]},{"path":[]},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/explicit_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Make NA values in factor columns explicit — explicit_na","title":"Make NA values in factor columns explicit — explicit_na","text":"Converts NA values factors dataframe new level - thin wrapper forcats::fct_explicit_na()","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/explicit_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make NA values in factor columns explicit — explicit_na","text":"","code":"explicit_na(df, na_level = \"<missing>\")"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/explicit_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make NA values in factor columns explicit — explicit_na","text":"df data frame na_level label NA valued factors","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/explicit_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make NA values in factor columns explicit — explicit_na","text":"dataframe factor columns containing explicit na values","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/explicit_na.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make NA values in factor columns explicit — explicit_na","text":"","code":"# before missing_diamonds %>% dplyr::group_by(cut) %>% dplyr::count() #> # A tibble: 6 × 2 #> # Groups:   cut [6] #>   cut           n #>   <ord>     <int> #> 1 Fair       1454 #> 2 Good       4462 #> 3 Very Good 10816 #> 4 Premium   12460 #> 5 Ideal     19361 #> 6 NA         5387 # after missing_diamonds %>% explicit_na() %>% dplyr::group_by(cut) %>% dplyr::count() #> # A tibble: 6 × 2 #> # Groups:   cut [6] #>   cut           n #>   <ord>     <int> #> 1 Fair       1454 #> 2 Good       4462 #> 3 Very Good 10816 #> 4 Premium   12460 #> 5 Ideal     19361 #> 6 <missing>  5387"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/get_footer_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Get footer text if available — get_footer_text","title":"Get footer text if available — get_footer_text","text":"functions tableone record methods used reporting scientific paper. normality assumption tests significance tests.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/get_footer_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get footer text if available — get_footer_text","text":"","code":"get_footer_text(df_output)"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/get_footer_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get footer text if available — get_footer_text","text":"df_output data frame output tableone function","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/get_footer_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get footer text if available — get_footer_text","text":"footnotes exist list (NULL otherwise)","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/get_footer_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get footer text if available — get_footer_text","text":"","code":"iris %>% describe_population(tidyselect::everything()) %>% get_footer_text() #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> median_iqr summary for Petal.Length #> median_iqr summary for Petal.Width #> subtype_count summary for Species #> NULL iris %>% dplyr::group_by(Species) %>%   compare_population(tidyselect::everything()) %>% get_footer_text() #> Warning: restarting interrupted promise evaluation #> mean_sd summary for Sepal.Length #> mean_sd summary for Sepal.Width #> median_iqr summary for Petal.Length #> median_iqr summary for Petal.Width #> anova test on Sepal.Length #> anova test on Sepal.Width #> kruskal-wallis test on Petal.Length #> kruskal-wallis test on Petal.Width #> NULL"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/make_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert discrete data to factors — make_factors","title":"Convert discrete data to factors — make_factors","text":"simpler presentation sometimes correct discrete valued data represented factors. discrete valued data might logical values, character values, numeric values limited number levels (e.g. scores). function lets convert (subset ) data frame columns factors using","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/make_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert discrete data to factors — make_factors","text":"","code":"make_factors(   df,   ...,   .logical = c(\"yes\", \"no\"),   .numeric = \"{name}={value}\",   .character = NULL )"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/make_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert discrete data to factors — make_factors","text":"df data frame ... either tidyselect specification formula right hand side defining columns convert (left hand side ignored) .logical (optional) length 2 vector defining levels TRUE, FALSE. .numeric (optional) provided must either named list e.g. c(column_name = \"{name}:{value}\", ..., .default=\"{value}\") pairs define way numeric columns converted factor levels. single value given numerics converted way (default). values certain want convert setting limit maximum number levels generated factor may good idea (.e. options(\"tableone.max_discrete_levels\"=16)) otherwise values converted .character general character columns converted factor default levels. explicitly set levels named list can given c(colname_1 = c(\"level_1\", \"level_2\", ...), colname_2 = ...)","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/make_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert discrete data to factors — make_factors","text":"dataframe columns converted factors","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/make_factors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert discrete data to factors — make_factors","text":"","code":"iris %>%   make_factors(tidyselect::ends_with(\"Length\"), .numeric = \"{name}={round(value)}\") %>%   dplyr::glimpse() #> Rows: 150 #> Columns: 5 #> $ Sepal.Length <ord> Sepal.Length=5, Sepal.Length=5, Sepal.Length=5, Sepal.Len… #> $ Sepal.Width  <dbl> 3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.… #> $ Petal.Length <ord> Petal.Length=1, Petal.Length=1, Petal.Length=1, Petal.Len… #> $ Petal.Width  <dbl> 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.… #> $ Species      <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, s…  # Convert everything in diamonds to be a factor, rounding all # the numeric values and converting all the names to upper case tmp = diamonds %>%   dplyr::mutate(is_colored = color > \"F\") %>%   make_factors(tidyselect::everything(), .numeric=\"{toupper(name)}={round(value)}\")  # as we included `price` which has very many levels one factor is unuseable with 11602 levels: length(levels(tmp$price)) #> [1] 11602  # we could explicitly exclude it from the `tidyselect` syntax `...` parameter: diamonds %>% dplyr::mutate(is_colored = color > \"F\") %>%   make_factors(-price, .numeric=\"{toupper(name)}={round(value)}\") %>%   dplyr::glimpse() #> Rows: 53,940 #> Columns: 11 #> $ carat      <ord> CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT… #> $ cut        <ord> Ideal, Premium, Good, Premium, Good, Very Good, Very Good, … #> $ color      <ord> E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J,… #> $ clarity    <ord> SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS… #> $ depth      <ord> DEPTH=62, DEPTH=60, DEPTH=57, DEPTH=62, DEPTH=63, DEPTH=63,… #> $ table      <ord> TABLE=55, TABLE=61, TABLE=65, TABLE=58, TABLE=58, TABLE=57,… #> $ price      <int> 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340,… #> $ x          <ord> X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4,… #> $ y          <ord> Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4,… #> $ z          <ord> Z=2, Z=2, Z=2, Z=3, Z=3, Z=2, Z=2, Z=3, Z=2, Z=2, Z=3, Z=2,… #> $ is_colored <fct> no, no, no, yes, yes, yes, yes, yes, no, yes, yes, yes, no,…  # or alternatively we set a limit on the maximum number of factors, which # in this example picks up the `depth` and `table` columns as exceeding this # new limit:  old = options(\"tableone.max_discrete_levels\"=16) diamonds %>% dplyr::mutate(is_colored = color > \"F\") %>%   make_factors(tidyselect::everything(), .numeric=\"{toupper(name)}={round(value)}\") %>%   dplyr::glimpse() #> Skipping factor conversion for depth because is has 28 levels and the maximum number allowed is set to 16 #> Skipping factor conversion for table because is has 29 levels and the maximum number allowed is set to 16 #> Skipping factor conversion for price because is has 11602 levels and the maximum number allowed is set to 16 #> Rows: 53,940 #> Columns: 11 #> $ carat      <ord> CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT=0, CARAT… #> $ cut        <ord> Ideal, Premium, Good, Premium, Good, Very Good, Very Good, … #> $ color      <ord> E, E, E, I, J, J, I, H, E, H, J, J, F, J, E, E, I, J, J, J,… #> $ clarity    <ord> SI2, SI1, VS1, VS2, SI2, VVS2, VVS1, SI1, VS2, VS1, SI1, VS… #> $ depth      <dbl> 61.5, 59.8, 56.9, 62.4, 63.3, 62.8, 62.3, 61.9, 65.1, 59.4,… #> $ table      <dbl> 55, 61, 65, 58, 58, 57, 57, 55, 61, 61, 55, 56, 61, 54, 62,… #> $ price      <int> 326, 326, 327, 334, 335, 336, 336, 337, 337, 338, 339, 340,… #> $ x          <ord> X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4, X=4,… #> $ y          <ord> Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4, Y=4,… #> $ z          <ord> Z=2, Z=2, Z=2, Z=3, Z=3, Z=2, Z=2, Z=3, Z=2, Z=2, Z=3, Z=2,… #> $ is_colored <fct> no, no, no, yes, yes, yes, yes, yes, no, yes, yes, yes, no,…  options(old)  # converting a character vector. Here we specify `.character` as a list giving the # possible levels of `alpha2`. Values outside of this list are converted to `NA`  set.seed(100) eg_character = tibble::tibble(   alpha1 =  sample(letters,50,replace=TRUE),   alpha2 = sample(LETTERS,50,replace=TRUE) )  eg_character %>%   make_factors(tidyselect::everything(), .character = list(alpha2 = LETTERS[3:20])) #> # A tibble: 50 × 2 #>    alpha1 alpha2 #>    <fct>  <fct>  #>  1 j      NA     #>  2 w      K      #>  3 f      G      #>  4 p      NA     #>  5 s      I      #>  6 y      F      #>  7 z      T      #>  8 n      N      #>  9 l      K      #> 10 w      M      #> # … with 40 more rows"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/missing_diamonds.html","id":null,"dir":"Reference","previous_headings":"","what":"A copy of the diamonds dataset — missing_diamonds","title":"A copy of the diamonds dataset — missing_diamonds","text":"10% entries replaced NA binary class is_coloured based color column","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/missing_diamonds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A copy of the diamonds dataset — missing_diamonds","text":"","code":"missing_diamonds"},{"path":[]},{"path":[]},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/mnar_two_class_1000.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing not at random 2 class 1000 items — mnar_two_class_1000","title":"Missing not at random 2 class 1000 items — mnar_two_class_1000","text":"random data test dataset 2 classes (groupings column) one 10% missing data 20%","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/mnar_two_class_1000.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing not at random 2 class 1000 items — mnar_two_class_1000","text":"","code":"mnar_two_class_1000"},{"path":[]},{"path":[]},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/multi_class_negative.html","id":null,"dir":"Reference","previous_headings":"","what":"A multi-class dataset with equal random samples in each class — multi_class_negative","title":"A multi-class dataset with equal random samples in each class — multi_class_negative","text":"multi-class dataset equal random samples class","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/multi_class_negative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A multi-class dataset with equal random samples in each class — multi_class_negative","text":"","code":"multi_class_negative"},{"path":[]},{"path":[]},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/one_class_test_100.html","id":null,"dir":"Reference","previous_headings":"","what":"A single-class dataset with 100 items of random data — one_class_test_100","title":"A single-class dataset with 100 items of random data — one_class_test_100","text":"columns contain set random data different types e.g. uniform continuous, normal, binomial, multinomial.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/one_class_test_100.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A single-class dataset with 100 items of random data — one_class_test_100","text":"","code":"one_class_test_100"},{"path":[]},{"path":[]},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/one_class_test_1000.html","id":null,"dir":"Reference","previous_headings":"","what":"A single-class dataset with 1000 items of random data — one_class_test_1000","title":"A single-class dataset with 1000 items of random data — one_class_test_1000","text":"columns contain set random data different types e.g. uniform continuous, normal, binomial, multinomial.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/one_class_test_1000.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A single-class dataset with 1000 items of random data — one_class_test_1000","text":"","code":"one_class_test_1000"},{"path":[]},{"path":[]},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/test_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of columns for a test case — test_cols","title":"A list of columns for a test case — test_cols","text":"list columns test case","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/test_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of columns for a test case — test_cols","text":"","code":"test_cols"},{"path":[]},{"path":[]},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/two_class_test.html","id":null,"dir":"Reference","previous_headings":"","what":"A two-class dataset with random data — two_class_test","title":"A two-class dataset with random data — two_class_test","text":"columns contain set random data different types e.g. uniform continuous, normal, binomial, multinomial. grouping 1 100 items grouping 2 1000 items","code":""},{"path":"https://bristol-vaccine-centre.github.io/tableone/reference/two_class_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A two-class dataset with random data — two_class_test","text":"","code":"two_class_test"},{"path":[]},{"path":[]}]
